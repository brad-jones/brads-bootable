# yaml-language-server: $schema=https://taskfile.dev/schema.json
# https://taskfile.dev
version: "3"

dotenv: [".env"]

tasks:
  init:
    desc: Setup local dev env
    cmds:
      - lefthook install -f
      - git config pull.rebase true
      - git config core.editor "code --wait"
      - git config commit.template "$PWD/.gitmsgtpl"

  build:image:
    desc: Builds the OCI image that bootc will turn into a bootable ISO.
    cmds:
      - docker build -t ghcr.io/brad-jones/brads-bootable:dev ./src

  pull:iso:
    desc: Downloads the latest bootable ISO from ghcr.io
    cmds:
      - oras pull ghcr.io/brad-jones/brads-bootable/iso:latest -o ./iso

  copy:config:
    desc: Copies the K8s config/certs down to our local dev env
    summary: |
      This is a temporary measure until we get some sort of proper OIDC setup.
    cmds:
      - deno run -qA ./.tasks/kubeconfig-copier.ts

  goj:test:
    cmds:
      - task: goj:install
      - task: goj:run

  goj:install:
    vars:
      AGE_KEY:
        sh: gopass -o brads-bootable/age.key
      GH_TOKEN:
        sh: gopass -o brads-bootable/gh.token
    cmds:
      - kubectl --context mini1 delete namespace/goj-system || true
      - kubectl --context mini1 wait --for=delete namespace/goj-system --timeout=60s
      - kubectl --context mini1 apply -f ./src/var/lib/k0s/manifests/goj/install.yaml
      - kubectl --context mini1 -n goj-system create secret generic goj-git-bearer-token --from-literal=value={{.GH_TOKEN}}

  goj:run:
    vars:
      JOB:
        sh: kubectl --context mini1 create -f ./src/var/lib/k0s/manifests/goj/job.yaml -o=jsonpath={.metadata.name}
    cmds:
      - kubectl --context mini1 -n goj-system wait --for=condition=Ready pod -l=job-name={{.JOB}}
      - kubectl --context mini1 -n goj-system logs -f job/{{.JOB}}

  goj:clear:
    cmds:
      - kubectl delete jobs -n goj-system --all
